<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.edu.system.mapper.eduStuInfoMapper">
  <resultMap id="BaseResultMap" type="com.edu.system.entity.eduStuInfo">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="accountId" jdbcType="INTEGER" property="accountId" />
    <result column="stuSex" jdbcType="VARCHAR" property="stuSex" />
    <result column="stuTerm" jdbcType="VARCHAR" property="stuTerm" />
    <result column="stuPhone" jdbcType="VARCHAR" property="stuPhone" />
    <result column="status" jdbcType="TINYINT" property="status" />
    <result column="schoolId" jdbcType="INTEGER" property="schoolId" />
    <result column="classId" jdbcType="INTEGER" property="classId" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, accountId, stuSex, stuTerm, stuPhone, status, schoolId, classId
  </sql>
  <select id="selectByExample" parameterType="com.edu.system.entity.eduStuInfoExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from edu_stuInfo
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limitStart != null and limitSize >= 0">
      limit #{limitStart} , #{limitSize}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from edu_stuInfo
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from edu_stuInfo
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.edu.system.entity.eduStuInfoExample">
    delete from edu_stuInfo
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.edu.system.entity.eduStuInfo">
    insert into edu_stuInfo (id, accountId, stuSex, 
      stuTerm, stuPhone, status, 
      schoolId, classId)
    values (#{id,jdbcType=INTEGER}, #{accountId,jdbcType=INTEGER}, #{stuSex,jdbcType=VARCHAR}, 
      #{stuTerm,jdbcType=VARCHAR}, #{stuPhone,jdbcType=VARCHAR}, #{status,jdbcType=TINYINT}, 
      #{schoolId,jdbcType=INTEGER}, #{classId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.edu.system.entity.eduStuInfo">
    insert into edu_stuInfo
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="accountId != null">
        accountId,
      </if>
      <if test="stuSex != null">
        stuSex,
      </if>
      <if test="stuTerm != null">
        stuTerm,
      </if>
      <if test="stuPhone != null">
        stuPhone,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="schoolId != null">
        schoolId,
      </if>
      <if test="classId != null">
        classId,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="accountId != null">
        #{accountId,jdbcType=INTEGER},
      </if>
      <if test="stuSex != null">
        #{stuSex,jdbcType=VARCHAR},
      </if>
      <if test="stuTerm != null">
        #{stuTerm,jdbcType=VARCHAR},
      </if>
      <if test="stuPhone != null">
        #{stuPhone,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=TINYINT},
      </if>
      <if test="schoolId != null">
        #{schoolId,jdbcType=INTEGER},
      </if>
      <if test="classId != null">
        #{classId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.edu.system.entity.eduStuInfoExample" resultType="java.lang.Long">
    select count(*) from edu_stuInfo
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update edu_stuInfo
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.accountId != null">
        accountId = #{record.accountId,jdbcType=INTEGER},
      </if>
      <if test="record.stuSex != null">
        stuSex = #{record.stuSex,jdbcType=VARCHAR},
      </if>
      <if test="record.stuTerm != null">
        stuTerm = #{record.stuTerm,jdbcType=VARCHAR},
      </if>
      <if test="record.stuPhone != null">
        stuPhone = #{record.stuPhone,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=TINYINT},
      </if>
      <if test="record.schoolId != null">
        schoolId = #{record.schoolId,jdbcType=INTEGER},
      </if>
      <if test="record.classId != null">
        classId = #{record.classId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update edu_stuInfo
    set id = #{record.id,jdbcType=INTEGER},
      accountId = #{record.accountId,jdbcType=INTEGER},
      stuSex = #{record.stuSex,jdbcType=VARCHAR},
      stuTerm = #{record.stuTerm,jdbcType=VARCHAR},
      stuPhone = #{record.stuPhone,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=TINYINT},
      schoolId = #{record.schoolId,jdbcType=INTEGER},
      classId = #{record.classId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.edu.system.entity.eduStuInfo">
    update edu_stuInfo
    <set>
      <if test="accountId != null">
        accountId = #{accountId,jdbcType=INTEGER},
      </if>
      <if test="stuSex != null">
        stuSex = #{stuSex,jdbcType=VARCHAR},
      </if>
      <if test="stuTerm != null">
        stuTerm = #{stuTerm,jdbcType=VARCHAR},
      </if>
      <if test="stuPhone != null">
        stuPhone = #{stuPhone,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=TINYINT},
      </if>
      <if test="schoolId != null">
        schoolId = #{schoolId,jdbcType=INTEGER},
      </if>
      <if test="classId != null">
        classId = #{classId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.edu.system.entity.eduStuInfo">
    update edu_stuInfo
    set accountId = #{accountId,jdbcType=INTEGER},
      stuSex = #{stuSex,jdbcType=VARCHAR},
      stuTerm = #{stuTerm,jdbcType=VARCHAR},
      stuPhone = #{stuPhone,jdbcType=VARCHAR},
      status = #{status,jdbcType=TINYINT},
      schoolId = #{schoolId,jdbcType=INTEGER},
      classId = #{classId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>