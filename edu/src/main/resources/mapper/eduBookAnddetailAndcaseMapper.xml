<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.edu.system.mapper.eduBookAnddetailAndcaseMapper">
  <resultMap id="BaseResultMap" type="com.edu.system.entity.eduBookAnddetailAndcase">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="textbookId" jdbcType="INTEGER" property="textbookId" />
    <result column="textbookdetailId" jdbcType="INTEGER" property="textbookdetailId" />
    <result column="textbookcaseId" jdbcType="INTEGER" property="textbookcaseId" />
    <result column="courseId" jdbcType="INTEGER" property="courseId" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, textbookId, textbookdetailId, textbookcaseId, courseId
  </sql>
  <select id="selectByExample" parameterType="com.edu.system.entity.eduBookAnddetailAndcaseExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from edu_bookAnddetailAndcase
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limitStart != null and limitSize >= 0">
      limit #{limitStart} , #{limitSize}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from edu_bookAnddetailAndcase
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from edu_bookAnddetailAndcase
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.edu.system.entity.eduBookAnddetailAndcaseExample">
    delete from edu_bookAnddetailAndcase
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.edu.system.entity.eduBookAnddetailAndcase">
    insert into edu_bookAnddetailAndcase (id, textbookId, textbookdetailId, 
      textbookcaseId, courseId)
    values (#{id,jdbcType=INTEGER}, #{textbookId,jdbcType=INTEGER}, #{textbookdetailId,jdbcType=INTEGER}, 
      #{textbookcaseId,jdbcType=INTEGER}, #{courseId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.edu.system.entity.eduBookAnddetailAndcase">
    insert into edu_bookAnddetailAndcase
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="textbookId != null">
        textbookId,
      </if>
      <if test="textbookdetailId != null">
        textbookdetailId,
      </if>
      <if test="textbookcaseId != null">
        textbookcaseId,
      </if>
      <if test="courseId != null">
        courseId,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="textbookId != null">
        #{textbookId,jdbcType=INTEGER},
      </if>
      <if test="textbookdetailId != null">
        #{textbookdetailId,jdbcType=INTEGER},
      </if>
      <if test="textbookcaseId != null">
        #{textbookcaseId,jdbcType=INTEGER},
      </if>
      <if test="courseId != null">
        #{courseId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.edu.system.entity.eduBookAnddetailAndcaseExample" resultType="java.lang.Long">
    select count(*) from edu_bookAnddetailAndcase
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update edu_bookAnddetailAndcase
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.textbookId != null">
        textbookId = #{record.textbookId,jdbcType=INTEGER},
      </if>
      <if test="record.textbookdetailId != null">
        textbookdetailId = #{record.textbookdetailId,jdbcType=INTEGER},
      </if>
      <if test="record.textbookcaseId != null">
        textbookcaseId = #{record.textbookcaseId,jdbcType=INTEGER},
      </if>
      <if test="record.courseId != null">
        courseId = #{record.courseId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update edu_bookAnddetailAndcase
    set id = #{record.id,jdbcType=INTEGER},
      textbookId = #{record.textbookId,jdbcType=INTEGER},
      textbookdetailId = #{record.textbookdetailId,jdbcType=INTEGER},
      textbookcaseId = #{record.textbookcaseId,jdbcType=INTEGER},
      courseId = #{record.courseId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.edu.system.entity.eduBookAnddetailAndcase">
    update edu_bookAnddetailAndcase
    <set>
      <if test="textbookId != null">
        textbookId = #{textbookId,jdbcType=INTEGER},
      </if>
      <if test="textbookdetailId != null">
        textbookdetailId = #{textbookdetailId,jdbcType=INTEGER},
      </if>
      <if test="textbookcaseId != null">
        textbookcaseId = #{textbookcaseId,jdbcType=INTEGER},
      </if>
      <if test="courseId != null">
        courseId = #{courseId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.edu.system.entity.eduBookAnddetailAndcase">
    update edu_bookAnddetailAndcase
    set textbookId = #{textbookId,jdbcType=INTEGER},
      textbookdetailId = #{textbookdetailId,jdbcType=INTEGER},
      textbookcaseId = #{textbookcaseId,jdbcType=INTEGER},
      courseId = #{courseId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>