<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.edu.system.mapper.eduHomeworkscoreMapper">
  <resultMap id="BaseResultMap" type="com.edu.system.entity.eduHomeworkscore">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="taskAndstuId" jdbcType="INTEGER" property="taskAndstuId" />
    <result column="selfscore" jdbcType="VARCHAR" property="selfscore" />
    <result column="teacherscore" jdbcType="VARCHAR" property="teacherscore" />
    <result column="gradepoint" jdbcType="VARCHAR" property="gradepoint" />
    <result column="staus" jdbcType="VARCHAR" property="staus" />
    <result column="homeworkId" jdbcType="INTEGER" property="homeworkId" />
    <result column="courseTaskCoreliteracyId" jdbcType="INTEGER" property="courseTaskCoreliteracyId" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, taskAndstuId, selfscore, teacherscore, gradepoint, staus, homeworkId, courseTaskCoreliteracyId
  </sql>
  <select id="selectByExample" parameterType="com.edu.system.entity.eduHomeworkscoreExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from edu_homeworkscore
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limitStart != null and limitSize >= 0">
      limit #{limitStart} , #{limitSize}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from edu_homeworkscore
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from edu_homeworkscore
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.edu.system.entity.eduHomeworkscoreExample">
    delete from edu_homeworkscore
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.edu.system.entity.eduHomeworkscore">
    insert into edu_homeworkscore (id, taskAndstuId, selfscore, 
      teacherscore, gradepoint, staus, 
      homeworkId, courseTaskCoreliteracyId)
    values (#{id,jdbcType=INTEGER}, #{taskAndstuId,jdbcType=INTEGER}, #{selfscore,jdbcType=VARCHAR}, 
      #{teacherscore,jdbcType=VARCHAR}, #{gradepoint,jdbcType=VARCHAR}, #{staus,jdbcType=VARCHAR}, 
      #{homeworkId,jdbcType=INTEGER}, #{courseTaskCoreliteracyId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.edu.system.entity.eduHomeworkscore">
    insert into edu_homeworkscore
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="taskAndstuId != null">
        taskAndstuId,
      </if>
      <if test="selfscore != null">
        selfscore,
      </if>
      <if test="teacherscore != null">
        teacherscore,
      </if>
      <if test="gradepoint != null">
        gradepoint,
      </if>
      <if test="staus != null">
        staus,
      </if>
      <if test="homeworkId != null">
        homeworkId,
      </if>
      <if test="courseTaskCoreliteracyId != null">
        courseTaskCoreliteracyId,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="taskAndstuId != null">
        #{taskAndstuId,jdbcType=INTEGER},
      </if>
      <if test="selfscore != null">
        #{selfscore,jdbcType=VARCHAR},
      </if>
      <if test="teacherscore != null">
        #{teacherscore,jdbcType=VARCHAR},
      </if>
      <if test="gradepoint != null">
        #{gradepoint,jdbcType=VARCHAR},
      </if>
      <if test="staus != null">
        #{staus,jdbcType=VARCHAR},
      </if>
      <if test="homeworkId != null">
        #{homeworkId,jdbcType=INTEGER},
      </if>
      <if test="courseTaskCoreliteracyId != null">
        #{courseTaskCoreliteracyId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.edu.system.entity.eduHomeworkscoreExample" resultType="java.lang.Long">
    select count(*) from edu_homeworkscore
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update edu_homeworkscore
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.taskAndstuId != null">
        taskAndstuId = #{record.taskAndstuId,jdbcType=INTEGER},
      </if>
      <if test="record.selfscore != null">
        selfscore = #{record.selfscore,jdbcType=VARCHAR},
      </if>
      <if test="record.teacherscore != null">
        teacherscore = #{record.teacherscore,jdbcType=VARCHAR},
      </if>
      <if test="record.gradepoint != null">
        gradepoint = #{record.gradepoint,jdbcType=VARCHAR},
      </if>
      <if test="record.staus != null">
        staus = #{record.staus,jdbcType=VARCHAR},
      </if>
      <if test="record.homeworkId != null">
        homeworkId = #{record.homeworkId,jdbcType=INTEGER},
      </if>
      <if test="record.courseTaskCoreliteracyId != null">
        courseTaskCoreliteracyId = #{record.courseTaskCoreliteracyId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update edu_homeworkscore
    set id = #{record.id,jdbcType=INTEGER},
      taskAndstuId = #{record.taskAndstuId,jdbcType=INTEGER},
      selfscore = #{record.selfscore,jdbcType=VARCHAR},
      teacherscore = #{record.teacherscore,jdbcType=VARCHAR},
      gradepoint = #{record.gradepoint,jdbcType=VARCHAR},
      staus = #{record.staus,jdbcType=VARCHAR},
      homeworkId = #{record.homeworkId,jdbcType=INTEGER},
      courseTaskCoreliteracyId = #{record.courseTaskCoreliteracyId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.edu.system.entity.eduHomeworkscore">
    update edu_homeworkscore
    <set>
      <if test="taskAndstuId != null">
        taskAndstuId = #{taskAndstuId,jdbcType=INTEGER},
      </if>
      <if test="selfscore != null">
        selfscore = #{selfscore,jdbcType=VARCHAR},
      </if>
      <if test="teacherscore != null">
        teacherscore = #{teacherscore,jdbcType=VARCHAR},
      </if>
      <if test="gradepoint != null">
        gradepoint = #{gradepoint,jdbcType=VARCHAR},
      </if>
      <if test="staus != null">
        staus = #{staus,jdbcType=VARCHAR},
      </if>
      <if test="homeworkId != null">
        homeworkId = #{homeworkId,jdbcType=INTEGER},
      </if>
      <if test="courseTaskCoreliteracyId != null">
        courseTaskCoreliteracyId = #{courseTaskCoreliteracyId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.edu.system.entity.eduHomeworkscore">
    update edu_homeworkscore
    set taskAndstuId = #{taskAndstuId,jdbcType=INTEGER},
      selfscore = #{selfscore,jdbcType=VARCHAR},
      teacherscore = #{teacherscore,jdbcType=VARCHAR},
      gradepoint = #{gradepoint,jdbcType=VARCHAR},
      staus = #{staus,jdbcType=VARCHAR},
      homeworkId = #{homeworkId,jdbcType=INTEGER},
      courseTaskCoreliteracyId = #{courseTaskCoreliteracyId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>