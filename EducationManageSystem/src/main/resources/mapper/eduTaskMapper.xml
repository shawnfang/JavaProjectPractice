<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.education.system.mapper.eduTaskMapper">
  <resultMap id="BaseResultMap" type="com.education.system.entity.eduTask">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="schoolyearId" jdbcType="INTEGER" property="schoolyearId" />
    <result column="class_date" jdbcType="TIMESTAMP" property="class_date" />
    <result column="class_time" jdbcType="TIMESTAMP" property="class_time" />
    <result column="teacherInfoId" jdbcType="INTEGER" property="teacherInfoId" />
    <result column="credit" jdbcType="VARCHAR" property="credit" />
    <result column="classroomId" jdbcType="INTEGER" property="classroomId" />
    <result column="status" jdbcType="VARCHAR" property="status" />
    <result column="teaching_status" jdbcType="VARCHAR" property="teaching_status" />
    <result column="send_status" jdbcType="VARCHAR" property="send_status" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, schoolyearId, class_date, class_time, teacherInfoId, credit, classroomId, status, 
    teaching_status, send_status
  </sql>
  <select id="selectByExample" parameterType="com.education.system.entity.eduTaskExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from edu_task
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limitStart != null and limitSize >= 0">
      limit #{limitStart} , #{limitSize}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from edu_task
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from edu_task
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.education.system.entity.eduTaskExample">
    delete from edu_task
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.education.system.entity.eduTask">
    insert into edu_task (id, schoolyearId, class_date, 
      class_time, teacherInfoId, credit, 
      classroomId, status, teaching_status, 
      send_status)
    values (#{id,jdbcType=INTEGER}, #{schoolyearId,jdbcType=INTEGER}, #{class_date,jdbcType=TIMESTAMP}, 
      #{class_time,jdbcType=TIMESTAMP}, #{teacherInfoId,jdbcType=INTEGER}, #{credit,jdbcType=VARCHAR}, 
      #{classroomId,jdbcType=INTEGER}, #{status,jdbcType=VARCHAR}, #{teaching_status,jdbcType=VARCHAR}, 
      #{send_status,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.education.system.entity.eduTask">
    insert into edu_task
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="schoolyearId != null">
        schoolyearId,
      </if>
      <if test="class_date != null">
        class_date,
      </if>
      <if test="class_time != null">
        class_time,
      </if>
      <if test="teacherInfoId != null">
        teacherInfoId,
      </if>
      <if test="credit != null">
        credit,
      </if>
      <if test="classroomId != null">
        classroomId,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="teaching_status != null">
        teaching_status,
      </if>
      <if test="send_status != null">
        send_status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="schoolyearId != null">
        #{schoolyearId,jdbcType=INTEGER},
      </if>
      <if test="class_date != null">
        #{class_date,jdbcType=TIMESTAMP},
      </if>
      <if test="class_time != null">
        #{class_time,jdbcType=TIMESTAMP},
      </if>
      <if test="teacherInfoId != null">
        #{teacherInfoId,jdbcType=INTEGER},
      </if>
      <if test="credit != null">
        #{credit,jdbcType=VARCHAR},
      </if>
      <if test="classroomId != null">
        #{classroomId,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="teaching_status != null">
        #{teaching_status,jdbcType=VARCHAR},
      </if>
      <if test="send_status != null">
        #{send_status,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.education.system.entity.eduTaskExample" resultType="java.lang.Long">
    select count(*) from edu_task
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update edu_task
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.schoolyearId != null">
        schoolyearId = #{record.schoolyearId,jdbcType=INTEGER},
      </if>
      <if test="record.class_date != null">
        class_date = #{record.class_date,jdbcType=TIMESTAMP},
      </if>
      <if test="record.class_time != null">
        class_time = #{record.class_time,jdbcType=TIMESTAMP},
      </if>
      <if test="record.teacherInfoId != null">
        teacherInfoId = #{record.teacherInfoId,jdbcType=INTEGER},
      </if>
      <if test="record.credit != null">
        credit = #{record.credit,jdbcType=VARCHAR},
      </if>
      <if test="record.classroomId != null">
        classroomId = #{record.classroomId,jdbcType=INTEGER},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=VARCHAR},
      </if>
      <if test="record.teaching_status != null">
        teaching_status = #{record.teaching_status,jdbcType=VARCHAR},
      </if>
      <if test="record.send_status != null">
        send_status = #{record.send_status,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update edu_task
    set id = #{record.id,jdbcType=INTEGER},
      schoolyearId = #{record.schoolyearId,jdbcType=INTEGER},
      class_date = #{record.class_date,jdbcType=TIMESTAMP},
      class_time = #{record.class_time,jdbcType=TIMESTAMP},
      teacherInfoId = #{record.teacherInfoId,jdbcType=INTEGER},
      credit = #{record.credit,jdbcType=VARCHAR},
      classroomId = #{record.classroomId,jdbcType=INTEGER},
      status = #{record.status,jdbcType=VARCHAR},
      teaching_status = #{record.teaching_status,jdbcType=VARCHAR},
      send_status = #{record.send_status,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.education.system.entity.eduTask">
    update edu_task
    <set>
      <if test="schoolyearId != null">
        schoolyearId = #{schoolyearId,jdbcType=INTEGER},
      </if>
      <if test="class_date != null">
        class_date = #{class_date,jdbcType=TIMESTAMP},
      </if>
      <if test="class_time != null">
        class_time = #{class_time,jdbcType=TIMESTAMP},
      </if>
      <if test="teacherInfoId != null">
        teacherInfoId = #{teacherInfoId,jdbcType=INTEGER},
      </if>
      <if test="credit != null">
        credit = #{credit,jdbcType=VARCHAR},
      </if>
      <if test="classroomId != null">
        classroomId = #{classroomId,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=VARCHAR},
      </if>
      <if test="teaching_status != null">
        teaching_status = #{teaching_status,jdbcType=VARCHAR},
      </if>
      <if test="send_status != null">
        send_status = #{send_status,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.education.system.entity.eduTask">
    update edu_task
    set schoolyearId = #{schoolyearId,jdbcType=INTEGER},
      class_date = #{class_date,jdbcType=TIMESTAMP},
      class_time = #{class_time,jdbcType=TIMESTAMP},
      teacherInfoId = #{teacherInfoId,jdbcType=INTEGER},
      credit = #{credit,jdbcType=VARCHAR},
      classroomId = #{classroomId,jdbcType=INTEGER},
      status = #{status,jdbcType=VARCHAR},
      teaching_status = #{teaching_status,jdbcType=VARCHAR},
      send_status = #{send_status,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>